# YYHertz Redis Configuration
# Redis配置文件

# 基础连接配置
primary:
  host: "localhost"                          # Redis主机地址
  port: 6379                                 # Redis端口
  password: ""                               # Redis密码
  database: 0                                # Redis数据库索引(0-15)
  username: ""                               # Redis用户名(Redis 6.0+支持)

# 连接池配置
pool:
  max_idle: 10                               # 最大空闲连接数
  max_active: 100                            # 最大活跃连接数  
  idle_timeout: "300s"                       # 空闲连接超时时间
  max_conn_timeout: "1s"                     # 最大连接超时时间
  test_on_borrow: true                       # 获取连接时测试连接
  wait: true                                 # 连接池满时是否等待

# Redis集群配置
cluster:
  enable: false                              # 启用Redis集群模式
  nodes: []                                  # 集群节点列表
    # - "localhost:7001"
    # - "localhost:7002"
    # - "localhost:7003"
  password: ""                               # 集群密码
  read_only: false                           # 只读模式
  route_by_latency: false                    # 按延迟路由
  route_randomly: false                      # 随机路由

# Redis哨兵配置
sentinel:
  enable: false                              # 启用Redis哨兵模式
  addresses: []                              # 哨兵地址列表
    # - "localhost:26379"
    # - "localhost:26380"
    # - "localhost:26381"
  master_name: "mymaster"                    # 主节点名称
  password: ""                               # 哨兵密码
  database: 0                                # 数据库索引
  dial_timeout: "5s"                         # 连接超时
  read_timeout: "3s"                         # 读取超时
  write_timeout: "3s"                        # 写入超时

# 性能配置
performance:
  dial_timeout: "5s"                         # 连接超时
  read_timeout: "3s"                         # 读取超时
  write_timeout: "3s"                        # 写入超时
  pool_timeout: "4s"                         # 连接池获取超时
  idle_check_frequency: "60s"                # 空闲连接检查频率
  max_retries: 3                             # 最大重试次数
  min_retry_backoff: "8ms"                   # 最小重试间隔
  max_retry_backoff: "512ms"                 # 最大重试间隔

# TLS配置
tls:
  enable: false                              # 启用TLS加密
  cert_file: ""                              # 客户端证书文件路径
  key_file: ""                               # 客户端私钥文件路径
  ca_file: ""                                # CA证书文件路径
  insecure_skip_verify: false                # 跳过证书验证(不建议生产环境使用)
  server_name: ""                            # 服务器名称

# 监控配置
monitoring:
  enable: true                               # 启用监控
  metrics_path: "/metrics"                   # 监控指标路径
  slow_log_enable: true                      # 启用慢日志
  slow_threshold: "100ms"                    # 慢查询阈值
  stats_period: "10s"                        # 统计周期

# 缓存配置
cache:
  default_ttl: "1h"                          # 默认过期时间
  key_prefix: "yyhertz:cache:"               # 缓存键前缀
  serializer: "json"                         # 序列化器: json, msgpack, gob
  compression: false                         # 启用压缩(适用于大值)
  max_key_length: 250                        # 最大键长度
  max_value_size: 1048576                    # 最大值大小(字节) - 1MB

# Session存储配置  
session:
  key_prefix: "yyhertz:session:"             # Session键前缀
  default_ttl: "24h"                         # 默认过期时间
  serializer: "json"                         # 序列化方式: json, gob, msgpack
  gc_interval: "10m"                         # 垃圾回收间隔
  max_sessions: 10000                        # 最大Session数量
  cleanup_batch: 100                         # 批量清理大小

# 限流配置
rate_limit:
  enable: false                              # 启用限流功能
  key_prefix: "yyhertz:rate_limit:"          # 限流键前缀
  default_window: "60s"                      # 默认时间窗口
  default_limit: 100                         # 默认限制数量
  cleanup_period: "5m"                       # 过期数据清理周期

# 开发配置
development:
  enable: false                              # 启用开发模式
  log_commands: false                        # 记录Redis命令到日志
  log_results: false                         # 记录查询结果到日志
  debug_mode: false                          # 调试模式

# 使用示例:
# 1. 基础使用:
#    primary.host = "127.0.0.1"
#    primary.port = 6379
#    primary.password = "your_redis_password"
#
# 2. 集群模式:
#    cluster.enable = true
#    cluster.nodes = ["127.0.0.1:7001", "127.0.0.1:7002", "127.0.0.1:7003"]
#
# 3. 哨兵模式:
#    sentinel.enable = true
#    sentinel.addresses = ["127.0.0.1:26379", "127.0.0.1:26380"]
#    sentinel.master_name = "mymaster"
#
# 4. TLS加密:
#    tls.enable = true
#    tls.cert_file = "/path/to/client.crt"
#    tls.key_file = "/path/to/client.key"
#    tls.ca_file = "/path/to/ca.crt"
#
# 5. 性能优化:
#    pool.max_active = 200
#    performance.read_timeout = "1s"
#    performance.write_timeout = "1s"
